================================================================
              RELATORIO DE DESEMPENHO - ALGORITMOS             
================================================================

Dados analisados: 7 conjuntos de teste

+----------------+----------------+-------------+----------+--------+-------------+
| Algoritmo      | Tipo Dados     | Tempo (s)   | Compar.  | Trocas | Movimentac. |
+----------------+----------------+-------------+----------+--------+-------------+
| Insertion Sort | numeros        |  9.815587 | 1249974977 |      0 |  1250073727 |
| Bubble Sort    | numeros        | 23.106538 | 1249975000 | 1249973729 |  3749921187 |
| Selection Sort | numeros        | 20.622030 | 4875075089 |  49999 |      149997 |
| Shaker Sort    | numeros        | 22.583891 | 1249975000 | 1249973729 |  3749921187 |
| Shell Sort     | numeros        |  0.009456 |   688515 |      0 |     1181503 |
| Quick Sort     | numeros        |  0.025837 |  1497401 | 1207225 |     3621675 |
| Heap Sort      | numeros        |  0.018718 |  1365989 | 698821 |     2096463 |
+----------------+----------------+-------------+----------+--------+-------------+

OBSERVACOES:
- Tempos em segundos (precisao: microssegundos - 6 casas decimais)
- Para algoritmos muito rapidos, foram executadas multiplas medicoes
- Conjuntos < 100 elementos: 10 execucoes para maior precisao
- Conjuntos < 1000 elementos: 5 execucoes para maior precisao
- Conjuntos < 10000 elementos: 3 execucoes para maior precisao
- Conjuntos >= 10000 elementos: 1 execucao (suficientemente lenta)
- Comparacoes, Trocas e Movimentacoes: valores absolutos
- Movimentacoes: operacoes de memoria (memcpy) realizadas
- Uma troca equivale a 3 movimentacoes de memoria
- Dados ordenados por algoritmo

METRICAS EXPLICADAS:
- COMPARACOES: Numero de comparacoes entre elementos
- TROCAS: Numero de operacoes de alto nivel de troca
- MOVIMENTACOES: Numero real de operacoes de memoria (memcpy)
  * Algoritmos baseados em swap: 3 movimentacoes por troca
  * Insertion/Shell Sort: 1 movimentacao por deslocamento

COMPLEXIDADES TEORICAS:
Bubble Sort:    O(n²) medio, O(n) melhor, O(n²) pior
Insertion Sort: O(n²) medio, O(n) melhor, O(n²) pior
Selection Sort: O(n²) todos os casos
Quick Sort:     O(n log n) medio, O(n log n) melhor, O(n²) pior
Heap Sort:      O(n log n) todos os casos
Shell Sort:     O(n^1.25) medio (varia com incrementos)
Shaker Sort:    O(n²) medio, O(n) melhor, O(n²) pior
